@model EventModel

<div class="row">
    <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
        <form method="post">
            <input type="hidden" asp-for="@Model.Id" />

            <div class="form-group">
                <label asp-for="PerfomanceId"></label>
                <select asp-for="PerfomanceId" class="form-control">
                    @foreach (var perfomance in Model.Perfomances)
                    {
                        <option value="@perfomance.Id">@perfomance.DisplayName</option>
                    }
                </select>
                <span asp-validation-for="PerfomanceId" class="small text-danger"></span>
                <input type="button" class="btn btn-primary" value="Add new perfomance" 
                onclick="@("window.location.href='" + @Url.Action("Add", "Perfomance") + "'");" />
            </div>

            <div class="form-group">
                <label asp-for="LocationId"></label>
                <select asp-for="LocationId" class="form-control">
                    @foreach (var location in Model.Locations)
                    {
                        <option value="@location.Id">@location.DisplayName</option>
                    }
                </select>
                <span asp-validation-for="PerfomanceId" class="small text-danger"></span>
                <input type="button" class="btn btn-primary" value="Add new location"
                       onclick="@("window.location.href='" + @Url.Action("Add", "Location") + "'");" />
            </div>

            <div class="form-group">
                <label asp-for="PricePerTicket"></label>
                <input asp-for="PricePerTicket" class="form-control" placeholder="Price">
                <span asp-validation-for="PricePerTicket" class="small text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date"></label>
                @Html.TextBoxFor(model => model.Date,
                new { id="date", @class = "form-control", type = "text" })
                <span asp-validation-for="Date" class="text-danger" style="font-weight:bold;"></span>
            </div>
            <div class="form-check">
                <label asp-for="IsPremiere">Premiere</label>
                <input asp-for="IsPremiere" class="form-check-input" type="checkbox">
            </div>
            <div class="text-center">
                <input class="btn btn-primary mt-3" type="submit" value="Save"/>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @*<script type="text/javascript">
        $(document).ready(function () {
            $('#date').datepicker({
                dateFormat: "dd/MM/yyyy",
                showStatus: true,
                showWeeks: true,
                currentText: 'Now',
                autoSize: true,
                gotoCurrent: true,
                showAnim: 'blind',
                highlightWeek: true
            });
        });
    </script>*@
    <script src="~/Scripts/globalize.js" type="text/javascript">
    </script>
    <script src="~/Scripts/globalize.culture.de-DE.js" type="text/javascript">
    </script>
    <script src="~/Scripts/globalize.culture.en-US.js" type="text/javascript">
    </script>

    <script>
        $.validator.methods.number = function (value, element) {
            return this.optional(element) ||
                !isNaN(Globalize.parseFloat(value));
        }

        $.validator.methods.date = function (value, element) {
            return this.optional(element) ||
                Globalize.parseDate(value);
        }

        $(document).ready(function () {
            Globalize.culture('@System.Threading.Thread.CurrentThread.CurrentCulture');
        });
    </script>

    <script>
        jQuery.extend(jQuery.validator.methods, {
            range: function (value, element, param) {
                //Use the Globalization plugin to parse the value
                var val = Globalize.parseFloat(value);
                return this.optional(element) || (
                    val >= param[0] && val <= param[1]);
            }
        });
    </script>
}