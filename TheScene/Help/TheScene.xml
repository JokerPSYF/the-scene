<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>TheScene</name>
  </assembly>
  <members>
    <member name="T:TheScene.Areas.Admin.Constants.AdminConstants">
      <summary>
   Class AdminConstants.
   </summary>
    </member>
    <member name="F:TheScene.Areas.Admin.Constants.AdminConstants.Administrator">
      <summary>
   The administrator
   </summary>
    </member>
    <member name="T:TheScene.Areas.Admin.Controllers.BaseController">
      <summary>
   Class BaseController.
   Implements the <see cref="T:Microsoft.AspNetCore.Mvc.Controller" /></summary>
      <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
    </member>
    <member name="T:TheScene.Areas.Admin.Controllers.EventController">
      <summary>
   Class EventController.
   Implements the <see cref="T:TheScene.Areas.Admin.Controllers.BaseController" /></summary>
      <seealso cref="T:TheScene.Areas.Admin.Controllers.BaseController" />
    </member>
    <member name="F:TheScene.Areas.Admin.Controllers.EventController.eventService">
      <summary>
   The event service
   </summary>
    </member>
    <member name="F:TheScene.Areas.Admin.Controllers.EventController.commonService">
      <summary>
   The common service
   </summary>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.#ctor(IEventService,ICommonService)">
      <summary>
   Initializes a new instance of the <see cref="T:TheScene.Areas.Admin.Controllers.EventController" /> class.
   </summary>
      <param name="_eventService">The event service.</param>
      <param name="_commonService">The common service.</param>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.All(AllEventsQueryModel)">
      <summary>
   Return All Events
   </summary>
      <param name="query">AllEventsQueryModel</param>
      <returns>Events</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.Details(System.Int32)">
      <summary>
   Show details of an event
   </summary>
      <param name="id">The identifier.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.Add">
      <summary>
   GET Add new event
   </summary>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.Add(EventModel)">
      <summary>
   POST Add new event
   </summary>
      <param name="model">The model.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.Edit(System.Int32)">
      <summary>
   GET Edit evet
   </summary>
      <param name="id">The identifier.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.Edit(System.Int32,EventModel)">
      <summary>
   POST edit event
   </summary>
      <param name="id">The identifier.</param>
      <param name="model">Event model</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.Delete(System.Int32)">
      <summary>
   GET delete event
   </summary>
      <param name="id">The identifier.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.EventController.Delete(System.Int32,DeleteEventModel)">
      <summary>
   POST Delete event
   </summary>
      <param name="id">The identifier.</param>
      <param name="model">The model.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="T:TheScene.Areas.Admin.Controllers.LocationController">
      <summary>
   Class LocationController.
   Implements the <see cref="T:TheScene.Areas.Admin.Controllers.BaseController" /></summary>
      <seealso cref="T:TheScene.Areas.Admin.Controllers.BaseController" />
    </member>
    <member name="F:TheScene.Areas.Admin.Controllers.LocationController.commonService">
      <summary>
   The common service
   </summary>
    </member>
    <member name="F:TheScene.Areas.Admin.Controllers.LocationController.locationService">
      <summary>
   The location service
   </summary>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.#ctor(ICommonService,ILocationService)">
      <summary>
   Initializes a new instance of the <see cref="T:TheScene.Areas.Admin.Controllers.LocationController" /> class.
   </summary>
      <param name="commonService">The common service.</param>
      <param name="locationService">The location service.</param>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.All(AllLocationQueryModel)">
      <summary>
   Return All Locations
   </summary>
      <param name="query">AllEventsQueryModel</param>
      <returns>Events</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.Details(System.Int32)">
      <summary>
   Show details of an event
   </summary>
      <param name="id">The identifier.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.Add">
      <summary>
   Get View of add Location
   </summary>
      <returns>location model</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.Add(LocationModel)">
      <summary>
   Post, Add new Location
   </summary>
      <param name="model">location model</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.Edit(System.Int32)">
      <summary>
   GET Edit Location
   </summary>
      <param name="id">location id</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.Edit(System.Int32,LocationModel)">
      <summary>
   POST Edit location
   </summary>
      <param name="id">location id</param>
      <param name="model">location model</param>
      <returns>Ok</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.Delete(System.Int32)">
      <summary>
   GET view of delete location
   </summary>
      <param name="id">The identifier.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.LocationController.Delete(System.Int32,LocationModel)">
      <summary>
   POST Delete location
   </summary>
      <param name="id">The identifier.</param>
      <param name="model">The model.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="T:TheScene.Areas.Admin.Controllers.PerfomanceController">
      <summary>
   Class PerfomanceController.
   Implements the <see cref="T:TheScene.Areas.Admin.Controllers.BaseController" /></summary>
      <seealso cref="T:TheScene.Areas.Admin.Controllers.BaseController" />
    </member>
    <member name="F:TheScene.Areas.Admin.Controllers.PerfomanceController.perfomanceService">
      <summary>
   The perfomance service
   </summary>
    </member>
    <member name="F:TheScene.Areas.Admin.Controllers.PerfomanceController.commonService">
      <summary>
   The common service
   </summary>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.#ctor(IPerfomanceService,ICommonService)">
      <summary>
   Initializes a new instance of the <see cref="T:TheScene.Areas.Admin.Controllers.PerfomanceController" /> class.
   </summary>
      <param name="_perfomanceService">The perfomance service.</param>
      <param name="_commonService">The common service.</param>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.All(AllPerfomanceQueryModel)">
      <summary>
   Return All Events
   </summary>
      <param name="query">AllEventsQueryModel</param>
      <returns>Events</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.Details(System.Int32)">
      <summary>
   Get details of pefomance
   </summary>
      <param name="id">perfomance id</param>
      <returns>DetailPerfomanceModel model</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.Add">
      <summary>
   Get add view
   </summary>
      <returns>PerfomanceModel</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.Add(PerfomanceModel)">
      <summary>
   Post, add perfomance
   </summary>
      <param name="model">The model.</param>
      <returns>Ok</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.Edit(System.Int32)">
      <summary>
   Get Edit view
   </summary>
      <param name="id">perfomance id</param>
      <returns>Perfomance model</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.Edit(System.Int32,PerfomanceModel)">
      <summary>
   Post, Edit perfomance
   </summary>
      <param name="id">perfomance id</param>
      <param name="model">PerfomanceModel</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.Delete(System.Int32)">
      <summary>
   Get delete view
   </summary>
      <param name="id">perfomance id</param>
      <returns>DeletePerfomanceModel</returns>
    </member>
    <member name="M:TheScene.Areas.Admin.Controllers.PerfomanceController.Delete(System.Int32,DeleteEventModel)">
      <summary>
   Post, delete perfomance
   </summary>
      <param name="id">perfomance id</param>
      <param name="model">DeletePerfomanceModel</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="T:TheScene.Areas.Admin.Models.AllEventsQueryModel">
      <summary>
   All Events, the admin can
   </summary>
    </member>
    <member name="P:TheScene.Areas.Admin.Models.AllEventsQueryModel.PerfomanceTypes">
      <summary>
   Gets or sets the perfomance types.
   </summary>
      <value>The perfomance types.</value>
    </member>
    <member name="T:TheScene.Models.AllLocationQueryModel">
      <summary>
   Class AllLocationQueryModel.
   </summary>
    </member>
    <member name="F:TheScene.Models.AllLocationQueryModel.LocationsPerPage">
      <summary>
   The locations per page
   </summary>
    </member>
    <member name="P:TheScene.Models.AllLocationQueryModel.SearchTerm">
      <summary>
   Gets or sets the search term.
   </summary>
      <value>The search term.</value>
    </member>
    <member name="P:TheScene.Models.AllLocationQueryModel.CurrentPage">
      <summary>
   Gets or sets the current page.
   </summary>
      <value>The current page.</value>
    </member>
    <member name="P:TheScene.Models.AllLocationQueryModel.TotalLocationCount">
      <summary>
   Gets or sets the total location count.
   </summary>
      <value>The total location count.</value>
    </member>
    <member name="P:TheScene.Models.AllLocationQueryModel.PlaceType">
      <summary>
   Gets or sets the type of the place.
   </summary>
      <value>The type of the place.</value>
    </member>
    <member name="P:TheScene.Models.AllLocationQueryModel.PlaceTypes">
      <summary>
   Gets or sets the place types.
   </summary>
      <value>The place types.</value>
    </member>
    <member name="P:TheScene.Models.AllLocationQueryModel.Locations">
      <summary>
   Gets or sets the locations.
   </summary>
      <value>The locations.</value>
    </member>
    <member name="T:TheScene.Models.AllPerfomanceQueryModel">
      <summary>
   Class AllPerfomanceQueryModel.
   </summary>
    </member>
    <member name="F:TheScene.Models.AllPerfomanceQueryModel.PerfomancePerPage">
      <summary>
   The perfomance per page
   </summary>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.Genre">
      <summary>
   Gets or sets the genre.
   </summary>
      <value>The genre.</value>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.PerfomanceType">
      <summary>
   Gets or sets the type of the perfomance.
   </summary>
      <value>The type of the perfomance.</value>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.SearchTerm">
      <summary>
   Gets or sets the search term.
   </summary>
      <value>The search term.</value>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.Sorting">
      <summary>
   Gets or sets the sorting.
   </summary>
      <value>The sorting.</value>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.CurrentPage">
      <summary>
   Gets or sets the current page.
   </summary>
      <value>The current page.</value>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.TotalPerfomanceCount">
      <summary>
   Gets or sets the total perfomance count.
   </summary>
      <value>The total perfomance count.</value>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.Genres">
      <summary>
   Gets or sets the genres.
   </summary>
      <value>The genres.</value>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.PerfomanceTypes">
      <summary>
   Gets or sets the perfomance types.
   </summary>
      <value>The perfomance types.</value>
    </member>
    <member name="P:TheScene.Models.AllPerfomanceQueryModel.Perfomances">
      <summary>
   Gets or sets the perfomances.
   </summary>
      <value>The perfomances.</value>
    </member>
    <member name="T:TheScene.Models.ErrorViewModel">
      <summary>
   Class ErrorViewModel.
   </summary>
    </member>
    <member name="P:TheScene.Models.ErrorViewModel.RequestId">
      <summary>
   Gets or sets the request identifier.
   </summary>
      <value>The request identifier.</value>
    </member>
    <member name="P:TheScene.Models.ErrorViewModel.ShowRequestId">
      <summary>
   Gets a value indicating whether [show request identifier].
   </summary>
      <value>
        <c>true</c> if [show request identifier]; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:TheScene.Areas.Identity.Pages.Account.LoginModel">
      <summary>
   Class LoginModel.
   Implements the <see cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageModel" /></summary>
      <seealso cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageModel" />
    </member>
    <member name="T:TheScene.Areas.Identity.Pages.Account.LoginModel.InputModel">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
    </member>
    <member name="F:TheScene.Areas.Identity.Pages.Account.LoginModel._signInManager">
      <summary>
   The sign in manager
   </summary>
    </member>
    <member name="F:TheScene.Areas.Identity.Pages.Account.LoginModel._userManager">
      <summary>
   The user manager
   </summary>
    </member>
    <member name="M:TheScene.Areas.Identity.Pages.Account.LoginModel.#ctor(SignInManager{AppUser},UserManager{AppUser})">
      <summary>
   Initializes a new instance of the <see cref="T:TheScene.Areas.Identity.Pages.Account.LoginModel" /> class.
   </summary>
      <param name="signInManager">The sign in manager.</param>
      <param name="userManager">The user manager.</param>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.LoginModel.Input">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The input.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.LoginModel.ExternalLogins">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The external logins.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.LoginModel.ReturnUrl">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The return URL.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.LoginModel.ErrorMessage">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The error message.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.LoginModel.InputModel.Username">
      <summary>
   Gets or sets the username.
   </summary>
      <value>The username.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.LoginModel.InputModel.Password">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The password.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.LoginModel.InputModel.RememberMe">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>
        <c>true</c> if [remember me]; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:TheScene.Areas.Identity.Pages.Account.LoginModel.OnGetAsync(System.String)">
      <summary>
   On get as an asynchronous operation.
   </summary>
      <param name="returnUrl">The return URL.</param>
      <returns>A Task representing the asynchronous operation.</returns>
    </member>
    <member name="M:TheScene.Areas.Identity.Pages.Account.LoginModel.OnPostAsync(System.Nullable{System.String})">
      <summary>
   On post as an asynchronous operation.
   </summary>
      <param name="returnUrl">The return URL.</param>
      <returns>A Task&lt;IActionResult&gt; representing the asynchronous operation.</returns>
    </member>
    <member name="T:TheScene.Areas.Identity.Pages.Account.LogoutModel">
      <summary>
   Class LogoutModel.
   Implements the <see cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageModel" /></summary>
      <seealso cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageModel" />
    </member>
    <member name="F:TheScene.Areas.Identity.Pages.Account.LogoutModel._signInManager">
      <summary>
   The sign in manager
   </summary>
    </member>
    <member name="M:TheScene.Areas.Identity.Pages.Account.LogoutModel.#ctor(SignInManager{AppUser})">
      <summary>
   Initializes a new instance of the <see cref="T:TheScene.Areas.Identity.Pages.Account.LogoutModel" /> class.
   </summary>
      <param name="signInManager">The sign in manager.</param>
    </member>
    <member name="M:TheScene.Areas.Identity.Pages.Account.LogoutModel.OnPost(System.String)">
      <summary>
   Called when [post].
   </summary>
      <param name="returnUrl">The return URL.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="T:TheScene.Areas.Identity.Pages.Account.RegisterModel">
      <summary>
   Class RegisterModel.
   Implements the <see cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageModel" /></summary>
      <seealso cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageModel" />
    </member>
    <member name="T:TheScene.Areas.Identity.Pages.Account.RegisterModel.InputModel">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
    </member>
    <member name="F:TheScene.Areas.Identity.Pages.Account.RegisterModel._signInManager">
      <summary>
   The sign in manager
   </summary>
    </member>
    <member name="F:TheScene.Areas.Identity.Pages.Account.RegisterModel._userManager">
      <summary>
   The user manager
   </summary>
    </member>
    <member name="M:TheScene.Areas.Identity.Pages.Account.RegisterModel.#ctor(UserManager{AppUser},SignInManager{AppUser})">
      <summary>
   Initializes a new instance of the <see cref="T:TheScene.Areas.Identity.Pages.Account.RegisterModel" /> class.
   </summary>
      <param name="userManager">The user manager.</param>
      <param name="signInManager">The sign in manager.</param>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.RegisterModel.Input">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The input.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.RegisterModel.ReturnUrl">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The return URL.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.RegisterModel.InputModel.FirstName">
      <summary>
   Gets or sets the first name.
   </summary>
      <value>The first name.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.RegisterModel.InputModel.LastName">
      <summary>
   Gets or sets the last name.
   </summary>
      <value>The last name.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.RegisterModel.InputModel.Username">
      <summary>
   Gets or sets the username.
   </summary>
      <value>The username.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.RegisterModel.InputModel.Email">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The email.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.RegisterModel.InputModel.Password">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The password.</value>
    </member>
    <member name="P:TheScene.Areas.Identity.Pages.Account.RegisterModel.InputModel.ConfirmPassword">
      <summary>
   This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
   directly from your code. This API may change or be removed in future releases.
   </summary>
      <value>The confirm password.</value>
    </member>
    <member name="M:TheScene.Areas.Identity.Pages.Account.RegisterModel.OnGetAsync(System.String)">
      <summary>
   On get as an asynchronous operation.
   </summary>
      <param name="returnUrl">The return URL.</param>
      <returns>A Task representing the asynchronous operation.</returns>
    </member>
    <member name="M:TheScene.Areas.Identity.Pages.Account.RegisterModel.OnPostAsync(System.String)">
      <summary>
   On post as an asynchronous operation.
   </summary>
      <param name="returnUrl">The return URL.</param>
      <returns>A Task&lt;IActionResult&gt; representing the asynchronous operation.</returns>
    </member>
    <member name="T:TheScene.Controllers.HomeController">
      <summary>
   The only thing that the normal user will see
   </summary>
    </member>
    <member name="F:TheScene.Controllers.HomeController.eventService">
      <summary>
   The event service
   </summary>
    </member>
    <member name="F:TheScene.Controllers.HomeController.commonService">
      <summary>
   The common service
   </summary>
    </member>
    <member name="M:TheScene.Controllers.HomeController.#ctor(IEventService,ICommonService)">
      <summary>
   Initializes a new instance of the <see cref="T:TheScene.Controllers.HomeController" /> class.
   </summary>
      <param name="_eventService">The event service.</param>
      <param name="_commonService">The common service.</param>
    </member>
    <member name="M:TheScene.Controllers.HomeController.Index(EventsQueryModel)">
      <summary>
   Return All Events
   </summary>
      <param name="query">AllEventsQueryModel</param>
      <returns>Events</returns>
    </member>
    <member name="M:TheScene.Controllers.HomeController.NavBar(System.String)">
      <summary>
   We use it redirect to Index but to show only the events of the right perfomance type
   </summary>
      <param name="perfType">perfomance type</param>
      <returns>Events</returns>
    </member>
    <member name="M:TheScene.Controllers.HomeController.Details(System.Int32)">
      <summary>
   Show details of an event
   </summary>
      <param name="id">The identifier.</param>
      <returns>IActionResult.</returns>
    </member>
    <member name="M:TheScene.Controllers.HomeController.Error">
      <summary>
   Show Error
   </summary>
      <returns>IActionResult.</returns>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.TheSceneCollectionService">
      <summary>
   Class TheSceneCollectionService.
   </summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.TheSceneCollectionService.AddAplicationServices(IServiceCollection)">
      <summary>
   Adds the aplication services.
   </summary>
      <param name="services">The services.</param>
      <returns>IServiceCollection.</returns>
    </member>
    <member name="T:TheScene.ModelBinders.DecimalModelBinder">
      <summary>
   Class DecimalModelBinder.
   Implements the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder" /></summary>
      <seealso cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder" />
    </member>
    <member name="M:TheScene.ModelBinders.DecimalModelBinder.BindModelAsync(ModelBindingContext)">
      <summary>
   Binds the model asynchronous.
   </summary>
      <param name="bindingContext">The binding context.</param>
      <returns>Task.</returns>
    </member>
    <member name="T:TheScene.ModelBinders.DecimalModelBinderProvider">
      <summary>
   Class DecimalModelBinderProvider.
   Implements the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider" /></summary>
      <seealso cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider" />
    </member>
    <member name="M:TheScene.ModelBinders.DecimalModelBinderProvider.GetBinder(ModelBinderProviderContext)">
      <summary>
   Gets the binder.
   </summary>
      <param name="context">The context.</param>
      <returns>System.Nullable&lt;IModelBinder&gt;.</returns>
      <exception cref="T:System.ArgumentNullException">context</exception>
    </member>
    <member name="T:TheScene.Models.EventsQueryModel">
      <summary>
   Class EventsQueryModel.
   </summary>
    </member>
    <member name="F:TheScene.Models.EventsQueryModel.EventsPerPage">
      <summary>
   The events per page
   </summary>
    </member>
    <member name="P:TheScene.Models.EventsQueryModel.Genre">
      <summary>
   Gets or sets the genre.
   </summary>
      <value>The genre.</value>
    </member>
    <member name="P:TheScene.Models.EventsQueryModel.PerfomanceType">
      <summary>
   Gets or sets the type of the perfomance.
   </summary>
      <value>The type of the perfomance.</value>
    </member>
    <member name="P:TheScene.Models.EventsQueryModel.SearchTerm">
      <summary>
   Gets or sets the search term.
   </summary>
      <value>The search term.</value>
    </member>
    <member name="P:TheScene.Models.EventsQueryModel.Sorting">
      <summary>
   Gets or sets the sorting.
   </summary>
      <value>The sorting.</value>
    </member>
    <member name="P:TheScene.Models.EventsQueryModel.CurrentPage">
      <summary>
   Gets or sets the current page.
   </summary>
      <value>The current page.</value>
    </member>
    <member name="P:TheScene.Models.EventsQueryModel.TotalEventsCount">
      <summary>
   Gets or sets the total events count.
   </summary>
      <value>The total events count.</value>
    </member>
    <member name="P:TheScene.Models.EventsQueryModel.Genres">
      <summary>
   Gets or sets the genres.
   </summary>
      <value>The genres.</value>
    </member>
    <member name="P:TheScene.Models.EventsQueryModel.Events">
      <summary>
   Gets or sets the events.
   </summary>
      <value>The events.</value>
    </member>
    <member name="T:TheScene.StartUp">
      <summary>
   Class StartUp.
   </summary>
    </member>
    <member name="M:TheScene.StartUp.Main(System.String[])">
      <summary>
   Defines the entry point of the application.
   </summary>
      <param name="args">The arguments.</param>
      <exception cref="T:System.InvalidOperationException">Connection string 'DefaultConnection' not found.</exception>
    </member>
  </members>
</doc>